
(* Puzzle: Man, Wolf, Goat, Cabbage *)

type state = { M : bool, W : bool, G : bool, C : bool }


fun eq : (state : in, state : in, bool : out)

(*

fun eq (x,y) = x=y

*)

fun member : (state, state list, bool)

fun member (X, [], false).
    member (X, X::XS, true).
    member (X, Y::XS, B) = eq (X,Y,false), member (X, XS, B).

fun move : (state, state)

fun move ({M=true, W=false, G=true,  C=false}, {M=false, W=false, G=true, C=false}).
    move ({M=true, W=false, G=true,  C=false}, {M=false, W=false, G=false, C=false}).

    move ({M=true, W=false, G=true,  C=true},  {M=false, W=false, G=false, C=true}).
    move ({M=true, W=false, G=true,  C=true},  {M=false, W=false, G=true,  C=false}).

    move ({M=true, W=true,  G=false, C=true},  {M=false, W=true,  G=false, C=true}).
    move ({M=true, W=true,  G=false, C=true},  {M=false, W=false, G=false, C=true}).
    move ({M=true, W=true,  G=false, C=true},  {M=false, W=true,  G=false, C=false}).

    move ({M=true, W=true,  G=true,  C=false}, {M=false, W=false, G=true, C=false}).
    move ({M=true, W=true,  G=true,  C=false}, {M=false, W=true,  G=false, C=false}).

    move ({M=true, W=true,  G=true,  C=true},  {M=false, W=true,  G=false, C=true}).

fun path : (state list, state list)

fun path (PP, [{M=false,W=false,G=false,C=false}]).
    path (PP, S1 :: S2 :: P) = move (S1,S2), member (S1, PP, false), path (S1 :: PP, S2 :: P).
    path (PP, S1 :: S2 :: P) = move (S2,S1), member (S1, PP, false), path (S1 :: PP, S2 :: P).

fun solve : (state list)

fun solve ({M=true,W=true,G=true,C=true} :: P) = path ([], {M=true,W=true,G=true,C=true} :: P).
