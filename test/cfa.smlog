
type id = string

type label = int

type flowset = label list

datatype exp = Var of id
             | Lam of label * id * exp
             | App of exp * exp

datatype ty = TVar of id
            | TFun of ty * ty * flowset

type env = (id * ty) list

fun lookup : (id, env, ty)
 
fun lookup (X, (X,T) :: XS, T).
    lookup (X, (Y,_) :: XS, T) = lookup (X, XS, T).


fun isin : (label, label list)
 
fun isin (X, X :: XS).
    isin (X, Y :: XS) = isin (X, XS).


fun typing : (env, exp, ty)

fun typing (ENV, Var X, T) = 

      lookup (X, ENV, T).

    typing (ENV, Lam (L,X,E), TFun (T1,T2,FLOWSET)) = 

      typing ((X,T1) :: ENV, E, T2), isin(L, FLOWSET).

    typing (ENV, App (E1,E2), T2) = 

      typing (ENV, E1, TFun (T1,T2,FLOWSET)), 

      typing (ENV, E2, T1).



(*

App ( App (  Lam (1, "f", Lam (2, "x", App (Var "f", Var "x"))),
             Lam (3, "a", Var "a") ),
      Lam (4, "b", Var "b"))

*)

