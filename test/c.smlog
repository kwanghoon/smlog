(* simply type system *)

type id  = string

datatype ty = 
    Base of id
  | Fun  of ty * ty   

datatype term =
    Var of id
  | Lam of id * ty * term
  | App of term * term

type env = (id * ty) list

fun typing : (env, term, ty)
fun lookup : (id, env, ty)
fun extend : (env, id, ty, env)

fun typing (E, Var S, T)                       (* var rule *)
      = lookup (S, E, T).   

    typing (E, Lam (S, T1, EX), Fun (T1, T2))  (* lam rule *)
      = extend (E, S, T1, E'),
        typing (E', EX, T2).

    typing (E, App (EX_fn, EX_arg), T2)        (* app rule *)
      = typing (E, EX_fn, Fun (T1, T2)),
        typing (E, EX_arg, T1).
